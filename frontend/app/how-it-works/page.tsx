import { Header } from "@/components/header"
import { ArrowLeft } from "lucide-react"
import Link from "next/link"

export default function HowItWorksPage() {
  return (
    <main className="min-h-screen flex flex-col bg-gradient-to-b from-white to-purple-50">
      <Header />
      <div className="container mx-auto px-4 py-8 flex-1">
        <div className="max-w-4xl mx-auto relative">
          <Link
            href="/"
            className="absolute left-0 top-1 flex items-center text-gray-500 hover:text-[#6a50d3] transition-colors"
          >
            <ArrowLeft className="w-5 h-5" />
            <span className="sr-only">Назад</span>
          </Link>

          <h1 className="text-3xl font-bold text-center mb-8">Как это работает</h1>

          <div className="prose max-w-none">
            <p>Приложение RealTone состоит из трех основных частей, взаимодействующих между собой для обеспечения полного цикла анализа аудиофайлов на предмет подделок.</p>

            <h2>Основные компоненты системы:</h2>
            <ul>
              <li>
                <strong>Фронтенд (Next.js/React):</strong>
                <ul>
                  <li>Создан с использованием Next.js, React, TypeScript и Tailwind CSS.</li>
                  <li>Использует WaveSurfer.js для визуализации формы волны и воспроизведения аудио.</li>
                  <li>Взаимодействует с бэкендом через Go REST API для загрузки файлов, аутентификации и получения результатов анализа.</li>
                </ul>
              </li>
              <li>
                <strong>Бэкенд - Go REST API (Gin Gonic):</strong>
                <ul>
                  <li>Разработан на языке Go с использованием фреймворка Gin Gonic.</li>
                  <li>Отвечает за обработку HTTP-запросов, аутентификацию пользователей, управление загрузкой файлов.</li>
                  <li>Координирует взаимодействие с Python gRPC сервисом для запуска анализа аудио.</li>
                  <li>Подключается к PostgreSQL для хранения метаданных пользователей и файлов, и к MinIO для хранения самих аудиофайлов.</li>
                </ul>
              </li>
              <li>
                <strong>Бэкенд - Python gRPC Сервис:</strong>
                <ul>
                  <li>Реализован на Python с использованием технологии gRPC для эффективного межсервисного взаимодействия.</li>
                  <li>Выполняет основную задачу анализа аудио на наличие подделок с помощью предварительно обученной модели машинного обучения (<code>chk3.pth</code> на базе PyTorch/WavLM).</li>
                  <li>Получает аудиофайлы для анализа из хранилища MinIO.</li>
                  <li>Использует Redis для кэширования промежуточных данных, таких как аудиосегменты, для ускорения повторной обработки.</li>
                </ul>
              </li>
            </ul>

            <h2>Хранилища Данных:</h2>
            <ul>
              <li><strong>PostgreSQL:</strong> Реляционная база данных, используемая для хранения информации о пользователях (учетные данные, профили) и метаданных загруженных аудиофайлов (название, дата загрузки, результаты анализа).</li>
              <li><strong>MinIO:</strong> S3-совместимое объектное хранилище, предназначенное для безопасного и масштабируемого хранения загруженных пользователями аудиофайлов.</li>
              <li><strong>Redis:</strong> Высокопроизводительный кэш в памяти. В RealTone он используется Python gRPC сервисом для временного хранения аудиосегментов во время их обработки, что оптимизирует производительность.</li>
            </ul>

            <h2>Процесс Анализа:</h2>
            <p>Одной из ключевых особенностей RealTone является <strong>посегментный анализ</strong>. Когда пользователь загружает аудиофайл, система не анализирует его целиком за один проход. Вместо этого, аудиофайл автоматически делится на более короткие сегменты (чанки). Каждый такой сегмент затем анализируется индивидуально моделью машинного обучения. Этот подход позволяет более точно локализовать потенциальные подделки в аудиодорожке и улучшает детализацию результатов, предоставляемых пользователю.</p>
          </div>
        </div>
      </div>
    </main>
  )
}
